name: Test and Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
          tools: composer:v2
          coverage: xdebug

      - name: Composer install
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Install Dependencies
        run: |
          npm install
          npm run build

      - name: Stan
        run: |
          make stan
      - name: Tests
        run: |
          touch database/database.sqlite
          make test

  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: [ ci ]
    env:
      GITHUB_SHA: ${{ github.sha }}
      RELEASE_PATH: /home/antonloginov/www/releases/${GITHUB_SHA}
      ACTIVE_RELEASE_PATH: /home/antonloginov/www/current
      STORAGE_PATH: /home/antonloginov/www/storage
      BASE_PATH: /home/antonloginov/www
      ENV_SECRET: ${{ secrets.ENV_SECRET }}
      SERVER_IP: 172.104.245.165
      SERVER_PORT: 22
      SERVER_USER: antonloginov
    steps:
      - name: Create release dir
        uses: appleboy/ssh-action@master
        with:
          host: ${SERVER_IP}
          username: ${SERVER_USER}
          key: ${{ secrets.SSH_KEY }}
          port: ${SERVER_PORT}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_SECRET
          script: |
            mkdir -p "${BASE_PATH}/releases/${GITHUB_SHA}"
      - name: Clone the release
        uses: appleboy/ssh-action@master
        with:
          host: ${SERVER_IP}
          username: ${SERVER_USER}
          key: ${{ secrets.SSH_KEY }}
          port: ${SERVER_PORT}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_SECRET
          script: |
            cd ${RELEASE_PATH} && git clone git@github.com:antonL95/antonloginov.git ./
      - name: Create directories
        uses: appleboy/ssh-action@master
        with:
          host: ${SERVER_IP}
          username: ${SERVER_USER}
          key: ${{ secrets.SSH_KEY }}
          port: ${SERVER_PORT}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_SECRET
          script: |
            rm -rf ${BASE_PATH}/releases/${GITHUB_SHA}/storage
            mkdir -p ${BASE_PATH}/storage/{app,public,framework,logs}
            mkdir -p ${BASE_PATH}/storage/framework/{cache,sessions,testing,views}
            chmod -R 0777 ${BASE_PATH}/storage
            ln -s -f ${STORAGE_PATH} ${RELEASE_PATH}

      - name: Activate release
        uses: appleboy/ssh-action@master
        with:
          host: ${SERVER_IP}
          username: ${SERVER_USER}
          key: ${{ secrets.SSH_KEY }}
          port: ${SERVER_PORT}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_SECRET
          script: |
            cd ${RELEASE_PATH} && composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            cd ${RELEASE_PATH} && source $BASE_PATH/../.nvm/nvm.sh && npm install --no-progress && npm run build
            rm -rf ${RELEASE_PATH}/database/database.sqlite
            ln -s -n -f ${BASE_PATH}/database.sqlite ${RELEASE_PATH}/database/database.sqlite
            /usr/bin/php ${RELEASE_PATH}/artisan env:decrypt --key=$ENV_SECRET --env=production
            mv ${RELEASE_PATH}/.env.production $RELEASE_PATH/.env
            /usr/bin/php ${RELEASE_PATH}/artisan migrate --force
            /usr/bin/php ${RELEASE_PATH}/artisan optimize:clear
            /usr/bin/php ${RELEASE_PATH}/artisan optimize
            ln -s -n -f ${RELEASE_PATH} ${ACTIVE_RELEASE_PATH}
            sudo supervisorctl reload
            sudo systemctl restart php8.3-fpm

